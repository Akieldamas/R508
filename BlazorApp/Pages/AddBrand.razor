@page "/addbrand"
@inject BrandViewModel brandViewModel

@using Microsoft.AspNetCore.Components.Forms
<PageTitle>Ajouter une marque</PageTitle>

<section class="container py-5">
    <div class="row justify-content-center align-items-center min-vh-75">

        <!-- Left Hero/Info panel - hidden on small screens -->
        <div class="col-lg-5 d-none d-lg-flex flex-column justify-content-center pe-lg-5">
            <h1 class="display-4 fw-bold text-warning mb-4">Ajouter une nouvelle marque</h1>
            <p class="lead mb-4">
                Remplissez le formulaire pour ajouter une marque unique à votre collection.
            </p>
        </div>

        <!-- Form card -->
        <div class="col-12 col-lg-5">
            <div class="card shadow-lg rounded-4 p-4 p-md-5 border-0">
                <h2 class="mb-4 text-center text-warning fw-bold">Ajouter une marque</h2>

                <EditForm Model="newBrand" OnValidSubmit="HandleAddBrand" class="needs-validation" novalidate>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger mb-4" />

                    <div class="form-floating mb-4">
                        <input id="BrandName" class="form-control form-control-lg" @bind="newBrand.NameBrand" placeholder="Nom de la marque" required />
                        <label for="BrandName">Nom de la marque</label>
                    </div>

                    <button type="submit" class="btn btn-warning btn-lg w-100 d-flex justify-content-center align-items-center gap-2">
                        <i class="bi bi-plus-circle"></i> Ajouter la marque
                    </button>
                </EditForm>
            </div>
        </div>

    </div>
</section>



<Toasts Messages="messages" Placement="ToastsPlacement.TopRight" AutoHide="true" Delay="5000" ShowCloseButton="true" />

@code {
    private Brand newBrand = new();
    private List<ToastMessage> messages = new();

    private void ShowMessage(ToastMessage toastMessage) => messages.Add(toastMessage);

    private async Task HandleAddBrand()
    {
        if (newBrand is null)
            return;
        ToastMessage toast = await brandViewModel.CreateBrand(newBrand);
        ShowMessage(toast);
        newBrand = new Brand();
    }
}