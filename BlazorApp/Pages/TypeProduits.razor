@page "/producttypes"
@inject ProductTypeViewModel productTypeViewModel
@inject IJSRuntime JSRuntime

<PageTitle>Type Produits</PageTitle>

<section class="container py-5">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bold text-success">Types de Produits</h1>
        <p class="lead text-muted">
            Consultez les différents types de produits. Vous pouvez aussi les supprimer si besoin.
        </p>
    </div>

    @if (productTypeViewModel.ProductTypes == null)
    {
        <div class="text-center">
            <div class="spinner-border text-success" role="status">
                <span class="visually-hidden">Chargement...</span>
            </div>
        </div>
    }
    else if (!productTypeViewModel.ProductTypes.Any())
    {
        <div class="alert alert-warning text-center" role="alert">
            Aucun type de produit trouvé.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var typeProduit in productTypeViewModel.ProductTypes)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-dark">
                                <i class="bi bi-tag me-2 text-success"></i>
                                @typeProduit.NameProductType
                            </h5>
                            <p class="card-text text-muted">ID: @typeProduit.IdProductType</p>
                            <div class="mt-auto">
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => ConfirmDelete(typeProduit)">
                                    <i class="bi bi-trash"></i> Supprimer
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</section>


<Toasts Messages="messages" Placement="ToastsPlacement.TopRight" AutoHide="true" Delay="5000" ShowCloseButton="true" />

@code {
    List<ToastMessage> messages = new();

    private void ShowMessage(ToastMessage toastMessage) => messages.Add(toastMessage);

    protected override async Task OnInitializedAsync()
    {
        var toast = await productTypeViewModel.LoadData();
        ShowMessage(toast);
    }

    private async Task ConfirmDelete(ProductType typeProduit)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete '{typeProduit.NameProductType}'?");
        if (confirmed)
        {
            var toast = await productTypeViewModel.DeleteProductType(typeProduit);
            ShowMessage(toast);
        }
    }
}
