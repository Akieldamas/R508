// <auto-generated />
using System;
using App.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251009172104_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Models.Brand", b =>
                {
                    b.Property<int>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_brand");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBrand"));

                    b.Property<string>("NameBrand")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_brand");

                    b.HasKey("IdBrand");

                    b.ToTable("brand");
                });

            modelBuilder.Entity("App.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("IdBrand")
                        .HasColumnType("integer")
                        .HasColumnName("id_brand");

                    b.Property<int?>("IdProductType")
                        .HasColumnType("integer")
                        .HasColumnName("id_product_type");

                    b.Property<string>("NamePhoto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_photo");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_product");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<int>("StockMax")
                        .HasColumnType("integer")
                        .HasColumnName("stock_max");

                    b.Property<int>("StockMin")
                        .HasColumnType("integer")
                        .HasColumnName("stock_min");

                    b.Property<int?>("StockReal")
                        .HasColumnType("integer")
                        .HasColumnName("stock_real");

                    b.Property<string>("UriPhoto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uri_photo");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdProductType");

                    b.ToTable("product");
                });

            modelBuilder.Entity("App.Models.ProductType", b =>
                {
                    b.Property<int>("IdProductType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_product_type");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProductType"));

                    b.Property<string>("NameProductType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_product_type");

                    b.HasKey("IdProductType");

                    b.ToTable("product_type");
                });

            modelBuilder.Entity("App.Models.Product", b =>
                {
                    b.HasOne("App.Models.Brand", "BrandNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdBrand")
                        .HasConstraintName("FK_products_brand");

                    b.HasOne("App.Models.ProductType", "ProductTypeNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdProductType")
                        .HasConstraintName("FK_products_product_type");

                    b.Navigation("BrandNavigation");

                    b.Navigation("ProductTypeNavigation");
                });

            modelBuilder.Entity("App.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("App.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
